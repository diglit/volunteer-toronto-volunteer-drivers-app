on:
    issues:
        types: [opened, labeled]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          name: id_rsa # optional
          known_hosts: unnecessary
          if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)
      
      - uses: actions/github-script@v4
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const {data: labels} = await github.issues.listLabelsOnIssue({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
            });
            const feature = labels.find(label=>label.name==='feature');
            if(!feature) return null;
            const branchName = `feature/${context.issue.number}`;
            const { exec } = require("child_process");
            exec(`git clone git@github.com:diglit/volunteer-toronto-volunteer-drivers-app.git; cd volunteer-toronto-volunteer-drivers-app; git config user.name github-actions; git config user.email github-actions@github.com; git checkout -b ${branchName}; git push --set-upstream origin ${branchName}`, (error, stdout, stderr) => {
                if (error) {
                    core.setFailed(`error: ${error.message}`);
                    return;
                }
                if (stderr) {
                    core.setFailed(`stderr: ${stderr}`);
                    return;
                }
                core.info(stdout)
            });
